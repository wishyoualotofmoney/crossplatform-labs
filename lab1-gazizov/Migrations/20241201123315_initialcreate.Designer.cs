// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab1_gazizov.Data;

#nullable disable

namespace lab1_gazizov.Migrations
{
    [DbContext(typeof(BarbershopContext))]
    [Migration("20241201123315_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lab1_gazizov.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("BarberId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BarberId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentTime = new DateTime(2024, 12, 1, 16, 33, 15, 139, DateTimeKind.Local).AddTicks(1082),
                            BarberId = 1,
                            CustomerId = 1,
                            Duration = 0,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppointmentTime = new DateTime(2024, 12, 1, 17, 3, 15, 139, DateTimeKind.Local).AddTicks(1107),
                            BarberId = 2,
                            CustomerId = 2,
                            Duration = 0,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            AppointmentTime = new DateTime(2024, 12, 1, 17, 33, 15, 139, DateTimeKind.Local).AddTicks(1109),
                            BarberId = 3,
                            CustomerId = 3,
                            Duration = 0,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 4,
                            AppointmentTime = new DateTime(2024, 12, 1, 18, 33, 15, 139, DateTimeKind.Local).AddTicks(1110),
                            BarberId = 4,
                            CustomerId = 4,
                            Duration = 0,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 5,
                            AppointmentTime = new DateTime(2024, 12, 1, 19, 3, 15, 139, DateTimeKind.Local).AddTicks(1113),
                            BarberId = 5,
                            CustomerId = 5,
                            Duration = 0,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 6,
                            AppointmentTime = new DateTime(2024, 12, 1, 19, 33, 15, 139, DateTimeKind.Local).AddTicks(1114),
                            BarberId = 6,
                            CustomerId = 6,
                            Duration = 0,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 7,
                            AppointmentTime = new DateTime(2024, 12, 1, 20, 33, 15, 139, DateTimeKind.Local).AddTicks(1115),
                            BarberId = 7,
                            CustomerId = 7,
                            Duration = 0,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 8,
                            AppointmentTime = new DateTime(2024, 12, 1, 21, 33, 15, 139, DateTimeKind.Local).AddTicks(1116),
                            BarberId = 8,
                            CustomerId = 8,
                            Duration = 0,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 9,
                            AppointmentTime = new DateTime(2024, 12, 1, 22, 3, 15, 139, DateTimeKind.Local).AddTicks(1118),
                            BarberId = 9,
                            CustomerId = 9,
                            Duration = 0,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 10,
                            AppointmentTime = new DateTime(2024, 12, 1, 22, 33, 15, 139, DateTimeKind.Local).AddTicks(1119),
                            BarberId = 10,
                            CustomerId = 10,
                            Duration = 0,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 11,
                            AppointmentTime = new DateTime(2024, 12, 1, 23, 33, 15, 139, DateTimeKind.Local).AddTicks(1120),
                            BarberId = 11,
                            CustomerId = 11,
                            Duration = 0,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 12,
                            AppointmentTime = new DateTime(2024, 12, 2, 0, 33, 15, 139, DateTimeKind.Local).AddTicks(1121),
                            BarberId = 12,
                            CustomerId = 12,
                            Duration = 0,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 13,
                            AppointmentTime = new DateTime(2024, 12, 2, 1, 3, 15, 139, DateTimeKind.Local).AddTicks(1123),
                            BarberId = 1,
                            CustomerId = 13,
                            Duration = 0,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 14,
                            AppointmentTime = new DateTime(2024, 12, 2, 1, 33, 15, 139, DateTimeKind.Local).AddTicks(1124),
                            BarberId = 2,
                            CustomerId = 14,
                            Duration = 0,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 15,
                            AppointmentTime = new DateTime(2024, 12, 2, 2, 33, 15, 139, DateTimeKind.Local).AddTicks(1125),
                            BarberId = 3,
                            CustomerId = 1,
                            Duration = 0,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 16,
                            AppointmentTime = new DateTime(2024, 12, 2, 3, 33, 15, 139, DateTimeKind.Local).AddTicks(1126),
                            BarberId = 4,
                            CustomerId = 2,
                            Duration = 0,
                            ServiceId = 16
                        },
                        new
                        {
                            Id = 17,
                            AppointmentTime = new DateTime(2024, 12, 2, 4, 33, 15, 139, DateTimeKind.Local).AddTicks(1127),
                            BarberId = 5,
                            CustomerId = 3,
                            Duration = 0,
                            ServiceId = 17
                        },
                        new
                        {
                            Id = 18,
                            AppointmentTime = new DateTime(2024, 12, 2, 5, 3, 15, 139, DateTimeKind.Local).AddTicks(1128),
                            BarberId = 6,
                            CustomerId = 4,
                            Duration = 0,
                            ServiceId = 18
                        },
                        new
                        {
                            Id = 19,
                            AppointmentTime = new DateTime(2024, 12, 2, 5, 33, 15, 139, DateTimeKind.Local).AddTicks(1130),
                            BarberId = 7,
                            CustomerId = 5,
                            Duration = 0,
                            ServiceId = 19
                        },
                        new
                        {
                            Id = 20,
                            AppointmentTime = new DateTime(2024, 12, 2, 6, 33, 15, 139, DateTimeKind.Local).AddTicks(1131),
                            BarberId = 8,
                            CustomerId = 6,
                            Duration = 0,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 21,
                            AppointmentTime = new DateTime(2024, 12, 2, 7, 33, 15, 139, DateTimeKind.Local).AddTicks(1132),
                            BarberId = 9,
                            CustomerId = 7,
                            Duration = 0,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 22,
                            AppointmentTime = new DateTime(2024, 12, 2, 8, 3, 15, 139, DateTimeKind.Local).AddTicks(1133),
                            BarberId = 10,
                            CustomerId = 8,
                            Duration = 0,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 23,
                            AppointmentTime = new DateTime(2024, 12, 2, 8, 33, 15, 139, DateTimeKind.Local).AddTicks(1134),
                            BarberId = 11,
                            CustomerId = 9,
                            Duration = 0,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 24,
                            AppointmentTime = new DateTime(2024, 12, 2, 9, 33, 15, 139, DateTimeKind.Local).AddTicks(1135),
                            BarberId = 12,
                            CustomerId = 10,
                            Duration = 0,
                            ServiceId = 5
                        });
                });

            modelBuilder.Entity("lab1_gazizov.Models.Barber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExperienceLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Barbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExperienceLevel = 5,
                            Name = "Иван Иванов"
                        },
                        new
                        {
                            Id = 2,
                            ExperienceLevel = 3,
                            Name = "Петр Петров"
                        },
                        new
                        {
                            Id = 3,
                            ExperienceLevel = 5,
                            Name = "Андрей Морозов"
                        },
                        new
                        {
                            Id = 4,
                            ExperienceLevel = 3,
                            Name = "Максим Клюев"
                        },
                        new
                        {
                            Id = 5,
                            ExperienceLevel = 5,
                            Name = "Виталий Костенко"
                        },
                        new
                        {
                            Id = 6,
                            ExperienceLevel = 3,
                            Name = "Семен Даниилов"
                        },
                        new
                        {
                            Id = 7,
                            ExperienceLevel = 5,
                            Name = "Артур Манасян"
                        },
                        new
                        {
                            Id = 8,
                            ExperienceLevel = 3,
                            Name = "Амир Мурадов"
                        },
                        new
                        {
                            Id = 9,
                            ExperienceLevel = 5,
                            Name = "Азамат Халитович"
                        },
                        new
                        {
                            Id = 10,
                            ExperienceLevel = 3,
                            Name = "Мимкаел Довлатбекян"
                        },
                        new
                        {
                            Id = 11,
                            ExperienceLevel = 5,
                            Name = "Арман Маникян"
                        },
                        new
                        {
                            Id = 12,
                            ExperienceLevel = 3,
                            Name = "Андрей Балаян"
                        });
                });

            modelBuilder.Entity("lab1_gazizov.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredStyle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Алексей Смирнов",
                            PreferredStyle = "Классический"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Дмитрий Винарчук",
                            PreferredStyle = "Под ноль"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Валера Деонтьев",
                            PreferredStyle = "Тройка"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Филипп Киркоров",
                            PreferredStyle = "Двойка"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Вазген Каспарянц",
                            PreferredStyle = "Под ноль"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ашот Саркисян",
                            PreferredStyle = "Классический"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Рустам Хайруллин",
                            PreferredStyle = "Классический"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Рустам Шайхутдинов",
                            PreferredStyle = "Модерн"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Булат Сидиков",
                            PreferredStyle = "Тройка"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Иван Туманов",
                            PreferredStyle = "Модерн"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Салават Юлаев",
                            PreferredStyle = "Тройка"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Айбек Сулейманов",
                            PreferredStyle = "Модерн"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Булат Шатрашанов",
                            PreferredStyle = "Двойка"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Ильяс Фархутдинов",
                            PreferredStyle = "Двойка"
                        });
                });

            modelBuilder.Entity("lab1_gazizov.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 30,
                            Name = "Стрижка",
                            Price = 500m
                        },
                        new
                        {
                            Id = 2,
                            Duration = 20,
                            Name = "Бритье",
                            Price = 300m
                        },
                        new
                        {
                            Id = 3,
                            Duration = 40,
                            Name = "Укладка",
                            Price = 400m
                        },
                        new
                        {
                            Id = 4,
                            Duration = 90,
                            Name = "Окрашивание",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 5,
                            Duration = 25,
                            Name = "Массаж головы",
                            Price = 700m
                        },
                        new
                        {
                            Id = 6,
                            Duration = 15,
                            Name = "Мытье головы",
                            Price = 200m
                        },
                        new
                        {
                            Id = 7,
                            Duration = 60,
                            Name = "Комплекс: стрижка и укладка",
                            Price = 800m
                        },
                        new
                        {
                            Id = 8,
                            Duration = 20,
                            Name = "Коррекция бороды",
                            Price = 350m
                        },
                        new
                        {
                            Id = 9,
                            Duration = 25,
                            Name = "Детская стрижка",
                            Price = 400m
                        },
                        new
                        {
                            Id = 10,
                            Duration = 45,
                            Name = "Камуфлирование седины",
                            Price = 1000m
                        },
                        new
                        {
                            Id = 11,
                            Duration = 40,
                            Name = "Королевское бритье",
                            Price = 600m
                        },
                        new
                        {
                            Id = 12,
                            Duration = 10,
                            Name = "Оформление усов",
                            Price = 150m
                        },
                        new
                        {
                            Id = 13,
                            Duration = 30,
                            Name = "Уход за кожей лица",
                            Price = 500m
                        },
                        new
                        {
                            Id = 14,
                            Duration = 60,
                            Name = "Тонирование волос",
                            Price = 800m
                        },
                        new
                        {
                            Id = 15,
                            Duration = 15,
                            Name = "Укладка усов",
                            Price = 200m
                        },
                        new
                        {
                            Id = 16,
                            Duration = 50,
                            Name = "Комплекс: бритье и массаж головы",
                            Price = 900m
                        },
                        new
                        {
                            Id = 17,
                            Duration = 20,
                            Name = "Лечебное мытье головы",
                            Price = 300m
                        },
                        new
                        {
                            Id = 18,
                            Duration = 15,
                            Name = "Стрижка машинкой",
                            Price = 250m
                        },
                        new
                        {
                            Id = 19,
                            Duration = 25,
                            Name = "Тримминг бороды",
                            Price = 300m
                        },
                        new
                        {
                            Id = 20,
                            Duration = 45,
                            Name = "Элитное бритье с маслом",
                            Price = 700m
                        });
                });

            modelBuilder.Entity("lab1_gazizov.Models.Appointment", b =>
                {
                    b.HasOne("lab1_gazizov.Models.Barber", "Barber")
                        .WithMany()
                        .HasForeignKey("BarberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab1_gazizov.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab1_gazizov.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barber");

                    b.Navigation("Customer");

                    b.Navigation("Service");
                });
#pragma warning restore 612, 618
        }
    }
}
